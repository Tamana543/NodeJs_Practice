this is when you are using only node js no express : 
form admin getAddProduct 
    // res.send('<form action="/admin/add-product" method="POST"><input type="text" name="title" placeholder="Enter product title" /><button type="submit">Add Product</button></form>')
     // res.sendFile(path.join(__dirname,'../','Views','add-product.html'))// there is a probem with it, it do not work for Linux or ther Os , as they start with \ not / so
     // res.sendFile(path.join(rootDir,'Views','add-product.html')) // Use the rootDir utility to get the correct path to the Views directory
     // next()



Use this folder if you want to work with sequalizer, put the codes in place, delete this note and take the files out of the folder. 
Controller - Admin.js : 
fun postAddProduct :
 // updating product by using sequalizer (User)
     // console.log(req.user);
      // req.user.createProduct({
     //      title: title,
     //     price: price,
     //     imageURL: imageUrl,
     //     description: description }
     // ).then((result)=>{
     //      res.redirect('/admin/products')
     // }).catch(err=>console.log("THen HEREEE",err))
     // updating product by using sequalizer 
     //   Product.create({
     //     title: title,
     //     price: price,
     //     imageURL: imageUrl,
     //     description: description,
     //     userId:req.user.id
     //   })
     //     .then(result => {
     //       // console.log(result)
     //     res.redirect('/admin/products')
     //     })
     //     .catch(err => {
     //       console.log(err);
     //     });

     
     // updating data table by using sql :
     // const product = new Product(null,title,imageUrl,price,description);
     // product.save().then(()=>{
     //      res.redirect('/') // Redirect the user to the  / route after processing the form submission
     // }).catch(err=>{
     //      console.log(err);
     // })
     
fun showAdminProduct :
  // using SQL (and from file)
     // Product.fetchAll().then(([row,fileContent])=>{

     //      // console.log(products);
     //      res.render('admin/products',{
     //           prods : row ,
     //           pageTitle : 'Admin Add products',
     //           path: '/admin/products',
               
     //           })
  
     // }).catch(err=> console.log(err))

fun getEditProduct:
   // console.log(ProductId);
     // req.user.createProduct({where : {id :ProductId}}) 
     // with sql : 
     //req.user.getProducts({where : {id : ProductId}})
     //     Product.findAll({where: {id : ProductId}}).then(product => {
     //  if (!product) {
     //    return res.redirect('/');
     //  }
     //  try {
               
     //       res.render('admin/edit-product', {
     //         pageTitle: 'Edit Product',
     //         path: '/admin/edit-products',
     //         editing: editMode,
     //         product: product
     //       });
     //  } catch (err) {
     //      console.log("Look Here ", err);
     //  }
     //})
     //.catch(err => console.log(err));

fun postEditProduct :
 //with sequalizer 

     // req.user.getProducts({where: {id:prodID}}) for sql 
     //      product.save(prodID).then((product)=>{
     //           product.title = updateeTitle,
     //           product.price = updatedPrice,
     //           product.description = updatedDescription,
     //           product.imageURL = updatedImageUrl 
     //           return product.save()

     // }).then(

     //           res.redirect('/admin/products')

     //      ).catch(err=> console.log(err))
     //with SQL
     // const updatedProduct= new Product(prodID,updateeTitle,updatedImageUrl,updatedPrice,updatedDescription)
     // updatedProduct.save() 

fun Post Deleted Product : 
     //using sequalizer
     // Product.findByPk(prodId).then(product=>{
     //      product.destroy()
     // }).then(()=>{
     //            console.log("Done")
     //       res.redirect('/admin/products')

     // }).catch(err => console.log(err))
 // using sql 
     // Product.deleteById(prodId)

