this is when you are using only node js no express : 
form admin getAddProduct 
    // res.send('<form action="/admin/add-product" method="POST"><input type="text" name="title" placeholder="Enter product title" /><button type="submit">Add Product</button></form>')
     // res.sendFile(path.join(__dirname,'../','Views','add-product.html'))// there is a probem with it, it do not work for Linux or ther Os , as they start with \ not / so
     // res.sendFile(path.join(rootDir,'Views','add-product.html')) // Use the rootDir utility to get the correct path to the Views directory
     // next()



Use this folder if you want to work with sequalizer, put the codes in place, delete this note and take the files out of the folder. 

Controller - Admin.js : 
fun postAddProduct :
 // updating product by using sequalizer (User)
     // console.log(req.user);
      // req.user.createProduct({
     //      title: title,
     //     price: price,
     //     imageURL: imageUrl,
     //     description: description }
     // ).then((result)=>{
     //      res.redirect('/admin/products')
     // }).catch(err=>console.log("THen HEREEE",err))
     // updating product by using sequalizer 
     //   Product.create({
     //     title: title,
     //     price: price,
     //     imageURL: imageUrl,
     //     description: description,
     //     userId:req.user.id
     //   })
     //     .then(result => {
     //       // console.log(result)
     //     res.redirect('/admin/products')
     //     })
     //     .catch(err => {
     //       console.log(err);
     //     });

     
     // updating data table by using sql :
     // const product = new Product(null,title,imageUrl,price,description);
     // product.save().then(()=>{
     //      res.redirect('/') // Redirect the user to the  / route after processing the form submission
     // }).catch(err=>{
     //      console.log(err);
     // })
     
fun showAdminProduct :
  // using SQL (and from file)
     // Product.fetchAll().then(([row,fileContent])=>{

     //      // console.log(products);
     //      res.render('admin/products',{
     //           prods : row ,
     //           pageTitle : 'Admin Add products',
     //           path: '/admin/products',
               
     //           })
  
     // }).catch(err=> console.log(err))

fun getEditProduct:
   // console.log(ProductId);
     // req.user.createProduct({where : {id :ProductId}}) 
     // with sql : 
     //req.user.getProducts({where : {id : ProductId}})
     //     Product.findAll({where: {id : ProductId}}).then(product => {
     //  if (!product) {
     //    return res.redirect('/');
     //  }
     //  try {
               
     //       res.render('admin/edit-product', {
     //         pageTitle: 'Edit Product',
     //         path: '/admin/edit-products',
     //         editing: editMode,
     //         product: product
     //       });
     //  } catch (err) {
     //      console.log("Look Here ", err);
     //  }
     //})
     //.catch(err => console.log(err));

fun postEditProduct :
 //with sequalizer 

     // req.user.getProducts({where: {id:prodID}}) for sql 
     //      product.save(prodID).then((product)=>{
     //           product.title = updateeTitle,
     //           product.price = updatedPrice,
     //           product.description = updatedDescription,
     //           product.imageURL = updatedImageUrl 
     //           return product.save()

     // }).then(

     //           res.redirect('/admin/products')

     //      ).catch(err=> console.log(err))
     //with SQL
     // const updatedProduct= new Product(prodID,updateeTitle,updatedImageUrl,updatedPrice,updatedDescription)
     // updatedProduct.save() 

fun Post Deleted Product : 
     //using sequalizer
     // Product.findByPk(prodId).then(product=>{
     //      product.destroy()
     // }).then(()=>{
     //            console.log("Done")
     //       res.redirect('/admin/products')

     // }).catch(err => console.log(err))
 // using sql 
     // Product.deleteById(prodId)

Controller - Shop.js
fun getProductsShop : 
  // with sql 
     //   Product.fetchAll().then(([rows])=>{
  
     //  // res.sendFile(path.join
     //            // console.log(products);
     //            res.render('shop/product-list',{
     //                prods : rows ,
     //                  pageTitle : 'Products',
     //                 path: '/products',
               
     //                })
     //   }).catch(err =>{
     //     console.log(err);
     //   })
fun getShopPage : 

  // by using sql 
     //       Product.fetchAll().then(([row])=>{
     // //row is whatever your database returning, like product
     // res.render('shop/index',{
     //     prods : row ,
     //       pageTitle : 'All products',
     //      path: '/',
     //      prodsExist : row.length > 0,
     //       activeShop: true,
     //      productCss : true
     //  // res.sendFile(path.join(rootDir,'Views','shop.html'))// it will send this file as a respond so that it will bw shown in page. a : __dirname mean chick    the folder that I write this code on its file  b : '../' as the dir point on main folder and we need to go up , c: Views the secpnd port in URL , d: the last      port of the url and the file
     // })
     //       }).catch(err=> console.log(err))// to render the default templates of shop.pug based the default tecmplate, and sinding the dynamic data (I had store  and make it map through the js object ) to the pug file 
fun getProductById : 
 // for working with sequalizer :
    /**
     
            Product.findAll({where: {id: productId}}).then(products =>{
      res.render('shop/product_detail',{
              product : products[0],
                pageTitle : products.title,
                path: '/products'
            })
    }).catch(err=>console.log(err))
          while working with sql : 
          Product.findById(productId).then((product)=>{
            console.log(product);
            res.render('shop/product_detail',{
              product : product,
                 pageTitle : product.title,
                 path: '/products'
            })

          }).catch(err => console.log(err))
      
          console.log(productId);
     */
fun getCartShop : 
     // sith Sequalizer
     /**
     req.user.getCart().then(cart =>{
     // console.log(cart);
     return cart.getProducts().then(product =>{
      res.render('shop/cart', {
     path: '/cart',
     pageTitle : 'Cart', 
     prods : product ,
     })
      }).catch(err=>console.log(err))
      }).catch(err=>{
   console.log(err);
     })
 
      */
fun postCardShop:
 // with sequlizer
  /**
   
  let fetchCart ; 
  let newQuantity = 1
  req.user.getCart().then(cart=>{
    fetchCart = cart
    // console.log(id,productId);
     return cart.getProducts({where: {id : productId}})
  }).then(products=>{
    let product;
    if(products.length > 0){

      product = products[0]
    }

    if(product){
     // increasing quantity here
      const oldQuantity= product.cartItem.quantity ;
      newQuantity = oldQuantity + 1
      return product;

    }
      return Product.findByPk(productId);
  }).then(product=>{
     return fetchCart.addProduct(product, {through : {quantity : newQuantity}})
  }).then(()=>{
    res.redirect('/cart')
  }).catch(err=>{
    console.log(err);
  })
   */
   
  //with SQL 
  // try {
    
  //     Product.findById(productId).then((product)=>{
  //        Cart.addProduct(productId, product.price)
  //     }).catch(err =>{console.log(err)})
  // } catch (error) {
  //     console.log(error);
  // }
  //   res.redirect('/cart');  
fun postDelCardView : 

    // By sequalier 
    /**
     req.user.getCart().then(cart=>{
       return cart.getProducts({where : {id : productId}})
     }).then(products=>{
       const product = products[0]
       // console.log(product);
       return product.cartItem.destroy()
     }).then(()=>{
       res.redirect('/cart')
     }).catch(err => console.log(err))
     
     */
    
     // By SQL
     /**
      // Product.findById(productId,product=>{
      //     Cart.deleteProd(productId,product.price)
      //     res.redirect('/cart')
      // })
      // console.log(productId);
      
      */
